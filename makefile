#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = -Wall -std=c++14 -fexceptions -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include -I/usr/include/gtk-3.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/mirclient -I/usr/include/mircommon -I/usr/include/mircookie -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng12 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = -lSDL2 -lGL -lGLEW -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/wuyi

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/wuyi

OBJ_DEBUG = $(OBJDIR_DEBUG)/mesh.o $(OBJDIR_DEBUG)/meshdata.o $(OBJDIR_DEBUG)/objloader.o $(OBJDIR_DEBUG)/shader.o $(OBJDIR_DEBUG)/texture.o $(OBJDIR_DEBUG)/timer.o $(OBJDIR_DEBUG)/unlitshader.o $(OBJDIR_DEBUG)/vertex.o $(OBJDIR_DEBUG)/window.o $(OBJDIR_DEBUG)/freelookcamera.o $(OBJDIR_DEBUG)/common.o $(OBJDIR_DEBUG)/diffuseshader.o $(OBJDIR_DEBUG)/entity.o $(OBJDIR_DEBUG)/framebuffershader.o $(OBJDIR_DEBUG)/game.o $(OBJDIR_DEBUG)/launcher.o $(OBJDIR_DEBUG)/lib/stb_image.o $(OBJDIR_DEBUG)/main.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/mesh.o $(OBJDIR_RELEASE)/meshdata.o $(OBJDIR_RELEASE)/objloader.o $(OBJDIR_RELEASE)/shader.o $(OBJDIR_RELEASE)/texture.o $(OBJDIR_RELEASE)/timer.o $(OBJDIR_RELEASE)/unlitshader.o $(OBJDIR_RELEASE)/vertex.o $(OBJDIR_RELEASE)/window.o $(OBJDIR_RELEASE)/freelookcamera.o $(OBJDIR_RELEASE)/common.o $(OBJDIR_RELEASE)/diffuseshader.o $(OBJDIR_RELEASE)/entity.o $(OBJDIR_RELEASE)/framebuffershader.o $(OBJDIR_RELEASE)/game.o $(OBJDIR_RELEASE)/launcher.o $(OBJDIR_RELEASE)/lib/stb_image.o $(OBJDIR_RELEASE)/main.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)
	test -d $(OBJDIR_DEBUG)/lib || mkdir -p $(OBJDIR_DEBUG)/lib

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/mesh.o: mesh.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c mesh.cpp -o $(OBJDIR_DEBUG)/mesh.o

$(OBJDIR_DEBUG)/meshdata.o: meshdata.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c meshdata.cpp -o $(OBJDIR_DEBUG)/meshdata.o

$(OBJDIR_DEBUG)/objloader.o: objloader.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c objloader.cpp -o $(OBJDIR_DEBUG)/objloader.o

$(OBJDIR_DEBUG)/shader.o: shader.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c shader.cpp -o $(OBJDIR_DEBUG)/shader.o

$(OBJDIR_DEBUG)/texture.o: texture.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c texture.cpp -o $(OBJDIR_DEBUG)/texture.o

$(OBJDIR_DEBUG)/timer.o: timer.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c timer.cpp -o $(OBJDIR_DEBUG)/timer.o

$(OBJDIR_DEBUG)/unlitshader.o: unlitshader.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c unlitshader.cpp -o $(OBJDIR_DEBUG)/unlitshader.o

$(OBJDIR_DEBUG)/vertex.o: vertex.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c vertex.cpp -o $(OBJDIR_DEBUG)/vertex.o

$(OBJDIR_DEBUG)/window.o: window.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c window.cpp -o $(OBJDIR_DEBUG)/window.o

$(OBJDIR_DEBUG)/freelookcamera.o: freelookcamera.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c freelookcamera.cpp -o $(OBJDIR_DEBUG)/freelookcamera.o

$(OBJDIR_DEBUG)/common.o: common.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c common.cpp -o $(OBJDIR_DEBUG)/common.o

$(OBJDIR_DEBUG)/diffuseshader.o: diffuseshader.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c diffuseshader.cpp -o $(OBJDIR_DEBUG)/diffuseshader.o

$(OBJDIR_DEBUG)/entity.o: entity.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c entity.cpp -o $(OBJDIR_DEBUG)/entity.o

$(OBJDIR_DEBUG)/framebuffershader.o: framebuffershader.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c framebuffershader.cpp -o $(OBJDIR_DEBUG)/framebuffershader.o

$(OBJDIR_DEBUG)/game.o: game.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c game.cpp -o $(OBJDIR_DEBUG)/game.o

$(OBJDIR_DEBUG)/launcher.o: launcher.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c launcher.cpp -o $(OBJDIR_DEBUG)/launcher.o

$(OBJDIR_DEBUG)/lib/stb_image.o: lib/stb_image.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c lib/stb_image.cpp -o $(OBJDIR_DEBUG)/lib/stb_image.o

$(OBJDIR_DEBUG)/main.o: main.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c main.cpp -o $(OBJDIR_DEBUG)/main.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)
	rm -rf $(OBJDIR_DEBUG)/lib

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)
	test -d $(OBJDIR_RELEASE)/lib || mkdir -p $(OBJDIR_RELEASE)/lib

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/mesh.o: mesh.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c mesh.cpp -o $(OBJDIR_RELEASE)/mesh.o

$(OBJDIR_RELEASE)/meshdata.o: meshdata.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c meshdata.cpp -o $(OBJDIR_RELEASE)/meshdata.o

$(OBJDIR_RELEASE)/objloader.o: objloader.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c objloader.cpp -o $(OBJDIR_RELEASE)/objloader.o

$(OBJDIR_RELEASE)/shader.o: shader.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c shader.cpp -o $(OBJDIR_RELEASE)/shader.o

$(OBJDIR_RELEASE)/texture.o: texture.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c texture.cpp -o $(OBJDIR_RELEASE)/texture.o

$(OBJDIR_RELEASE)/timer.o: timer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c timer.cpp -o $(OBJDIR_RELEASE)/timer.o

$(OBJDIR_RELEASE)/unlitshader.o: unlitshader.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c unlitshader.cpp -o $(OBJDIR_RELEASE)/unlitshader.o

$(OBJDIR_RELEASE)/vertex.o: vertex.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c vertex.cpp -o $(OBJDIR_RELEASE)/vertex.o

$(OBJDIR_RELEASE)/window.o: window.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c window.cpp -o $(OBJDIR_RELEASE)/window.o

$(OBJDIR_RELEASE)/freelookcamera.o: freelookcamera.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c freelookcamera.cpp -o $(OBJDIR_RELEASE)/freelookcamera.o

$(OBJDIR_RELEASE)/common.o: common.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c common.cpp -o $(OBJDIR_RELEASE)/common.o

$(OBJDIR_RELEASE)/diffuseshader.o: diffuseshader.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c diffuseshader.cpp -o $(OBJDIR_RELEASE)/diffuseshader.o

$(OBJDIR_RELEASE)/entity.o: entity.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c entity.cpp -o $(OBJDIR_RELEASE)/entity.o

$(OBJDIR_RELEASE)/framebuffershader.o: framebuffershader.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c framebuffershader.cpp -o $(OBJDIR_RELEASE)/framebuffershader.o

$(OBJDIR_RELEASE)/game.o: game.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c game.cpp -o $(OBJDIR_RELEASE)/game.o

$(OBJDIR_RELEASE)/launcher.o: launcher.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c launcher.cpp -o $(OBJDIR_RELEASE)/launcher.o

$(OBJDIR_RELEASE)/lib/stb_image.o: lib/stb_image.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lib/stb_image.cpp -o $(OBJDIR_RELEASE)/lib/stb_image.o

$(OBJDIR_RELEASE)/main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o $(OBJDIR_RELEASE)/main.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)
	rm -rf $(OBJDIR_RELEASE)/lib

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

